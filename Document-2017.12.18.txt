 
 




Part II:Simulation
dict_DirectionFeature{
  'Inflow'：{'OutFlow_Last':{'Time_Series':Probability},#Time_Series is in every 1 seconds
             'Dilution':{Time_Series':coefficient}
            },
  'Lanes':  ,
  'Timing': {'Green_Ef_Begin':  ,
             'Greeen_Ef_End': ,
             'Cycle_len': 
            },
  'Distance': ,
  'HeadwayMin': ,
  'VelocityMean': ,
  'VelocityDepature':
}

dict_BeforeIntersection{
  'list_Veh':[Veh_id],
  'dict_Veh':{'Veh_id':{'Location':x,
                        'Velocity':v,
                        'Acceleration':a,
                        'Gen_Time': ,
                        'Dep_Time': ,
                        'Stop_Times':
                       }
             }
}

dict_PassVeh{
  'list_Veh':[Veh_id],
  'dict_Veh':{'Veh_id':{'Location':x,
                        'Velocity':v,
                        'Acceleration':a,
                        'Gen_Time': ,
                        'Dep_Time': ,
                        'Stop_Times':
                       }
             }
}



**1** Direction:
**lanes**
  Process:
    1. Generate vehicles according to (a) Direction Features (b) Time_now (c) Gen Time of last veh (d) headway
       
       
       
    2. Update the state of vehicles on road
      1)Update location x
      2)Update Velocity v
        if the velocity is \le to 0
          then the velocity is 0, 'Stop_Times'+1
      3)Update Acceleration a:
        a)if is first veh
          I. if Green:
            i. if the velocity \le the VelocityDeparture
              the acceleration is Lamda*(VelocityDeparture-Velocity)
            ii. if the velocity \ge the VelocityDeparture
              the acceleration is 0
          II. if Red:
            i. if the velocity=0:
              acceleraion is 0
            ii. if the velocity>0
              if v^2/2Dec < distance
                the acceleration is -Deceleraion
              else
                a=0
        b)if not first veh
          if distance from the pre veh \le headwaymin*velocity/Lamda
            then a=lamda(vi-1-vi)
          else
            a=0
    3. Departure of vehicles according to (a) vehicle state (b) TimingPlan (c) Direction Feature
      if the location x \ge the distance,
        then update the 'Dep_Time', pop the item and update the item to dict_PassVeh
    
    
